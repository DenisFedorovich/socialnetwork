[{"D:\\JS_LESSONS\\React\\2\\react1\\src\\index.js":"1","D:\\JS_LESSONS\\React\\2\\react1\\src\\serviceWorker.js":"2","D:\\JS_LESSONS\\React\\2\\react1\\src\\App.js":"3","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\redux-store.js":"4","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\dialogs-reducer.js":"5","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\profile-reducer.js":"6","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\auth-reducer.js":"7","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\sidebar-reducer.js":"8","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\users-reducer.js":"9","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Header\\HeaderContainer.jsx":"10","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\DialogsContainer.jsx":"11","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Footer\\footer.jsx":"12","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Login\\Login.jsx":"13","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Nav\\Nav.jsx":"14","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Users\\UserContainer.jsx":"15","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileContainer.jsx":"16","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Api\\api.js":"17","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\HOC\\withAuhRedirect.js":"18","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\Profile.jsx":"19","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\Dialogs.jsx":"20","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Header\\Header.jsx":"21","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Users\\Users.jsx":"22","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Preloader\\Preloader.jsx":"23","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\DialogItem\\DialogsItem.jsx":"24","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"25","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\Message\\Message.jsx":"26","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\MyPost\\MyPostsContainer.jsx":"27","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\MyPost\\MyPosts.jsx":"28","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileInfo\\ProfieStatus\\ProfileStatus.jsx":"29","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\MyPost\\Post\\Post.jsx":"30","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\Validators\\validators.js":"31","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\Validators\\Validators.js":"32","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\FormsControls\\FormsControls.js":"33","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\app-reducer.js":"34","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\users-selectors.js":"35","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileInfo\\ProfieStatus\\ProfileStatusWithHooks.jsx":"36","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\object-helper.js":"37","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\Paginator\\Paginator.jsx":"38","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Users\\User.jsx":"39"},{"size":696,"mtime":1611499198017,"results":"40","hashOfConfig":"41"},{"size":5227,"mtime":1611499198021,"results":"42","hashOfConfig":"41"},{"size":1932,"mtime":1611506014467,"results":"43","hashOfConfig":"41"},{"size":936,"mtime":1612700465731,"results":"44","hashOfConfig":"41"},{"size":1493,"mtime":1611499198018,"results":"45","hashOfConfig":"41"},{"size":2245,"mtime":1612693107893,"results":"46","hashOfConfig":"41"},{"size":1617,"mtime":1612289397653,"results":"47","hashOfConfig":"41"},{"size":140,"mtime":1611499198020,"results":"48","hashOfConfig":"41"},{"size":4889,"mtime":1612293793375,"results":"49","hashOfConfig":"41"},{"size":447,"mtime":1611501803404,"results":"50","hashOfConfig":"41"},{"size":806,"mtime":1611499197996,"results":"51","hashOfConfig":"41"},{"size":399,"mtime":1611499197997,"results":"52","hashOfConfig":"41"},{"size":3069,"mtime":1612624681793,"results":"53","hashOfConfig":"41"},{"size":2158,"mtime":1611499198001,"results":"54","hashOfConfig":"41"},{"size":2704,"mtime":1612631771361,"results":"55","hashOfConfig":"41"},{"size":1173,"mtime":1612014480986,"results":"56","hashOfConfig":"41"},{"size":1773,"mtime":1611499197993,"results":"57","hashOfConfig":"41"},{"size":716,"mtime":1611499197999,"results":"58","hashOfConfig":"41"},{"size":492,"mtime":1612019879136,"results":"59","hashOfConfig":"41"},{"size":1973,"mtime":1611766123699,"results":"60","hashOfConfig":"41"},{"size":633,"mtime":1611499197999,"results":"61","hashOfConfig":"41"},{"size":1000,"mtime":1612631547793,"results":"62","hashOfConfig":"41"},{"size":184,"mtime":1611499198002,"results":"63","hashOfConfig":"41"},{"size":385,"mtime":1611499197994,"results":"64","hashOfConfig":"41"},{"size":1594,"mtime":1612632075860,"results":"65","hashOfConfig":"41"},{"size":251,"mtime":1611499197996,"results":"66","hashOfConfig":"41"},{"size":622,"mtime":1611499198003,"results":"67","hashOfConfig":"41"},{"size":1720,"mtime":1612087512157,"results":"68","hashOfConfig":"41"},{"size":1991,"mtime":1611499198006,"results":"69","hashOfConfig":"41"},{"size":552,"mtime":1612017958229,"results":"70","hashOfConfig":"41"},{"size":3,"mtime":1610894883408,"results":"71","hashOfConfig":"41"},{"size":270,"mtime":1611499198010,"results":"72","hashOfConfig":"41"},{"size":1489,"mtime":1612624611821,"results":"73","hashOfConfig":"41"},{"size":822,"mtime":1612016381194,"results":"74","hashOfConfig":"41"},{"size":835,"mtime":1612016386870,"results":"75","hashOfConfig":"41"},{"size":1607,"mtime":1612011054815,"results":"76","hashOfConfig":"41"},{"size":236,"mtime":1612371317027,"results":"77","hashOfConfig":"41"},{"size":676,"mtime":1612628403012,"results":"78","hashOfConfig":"41"},{"size":4358,"mtime":1612631256596,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"g3jeq8",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},"D:\\JS_LESSONS\\React\\2\\react1\\src\\index.js",[],["174","175"],"D:\\JS_LESSONS\\React\\2\\react1\\src\\serviceWorker.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\App.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\redux-store.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\dialogs-reducer.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\profile-reducer.js",["176"],"import {usersAPI, profileAPI} from './../components/Api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.id)}\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (userId) => ({type: DELETE_POST, userId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\auth-reducer.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\sidebar-reducer.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\users-reducer.js",["177","178"],"import {usersAPI} from './../components/Api/api';\r\nimport {updateObjectInArray} from \"../components/Utils/object-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true, //для preloader\r\n    followingInProgress: [], // отвечает за количство запросов на серв\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n               /* users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                /*users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n\r\n                })*/\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOOGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//users: [...state.users]}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toogleIsFetching = (isFetching) => ({type: TOOGLE_IS_FETCHING, isFetching}); // это экшен креэйтеры\r\nexport const toogleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOOGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n}); // это экшен креэйтеры\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toogleIsFetching(true));//смотреть документацию по серверу и испоьзуем дату с респонса\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toogleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n\r\n    }\r\n}//this is thunk function\r\n\r\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toogleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator (userId));\r\n    }\r\n    dispatch(toogleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess);\r\n    }\r\n}//this is thunk function\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\n//this is thunk function\r\n/*\r\nexport const setAuthUserData = (id, email, login) => {\r\n    return (dispatch) => {\r\n        usersAPI.setAuthUserData(id, email, login)\r\n        .then(response => { \r\n            if (response.data.resultCode === 0) {\r\n              let {id, email, login} = response.data.data\r\n              dispatch(setAuthUserData(id, email, login));\r\n            }\r\n          });\r\n    }\r\n}*/\r\n//this is thunk function\r\n\r\n\r\nexport default userReducer;","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Header\\HeaderContainer.jsx",["179","180","181","182"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\nimport Preloader from './../Preloader/Preloader';\r\nimport Header from './Header';\r\nimport { logout } from './../../redux/auth-reducer'\r\nimport { connect } from 'react-redux';\r\nimport { authAPI } from './../Api/api'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    return <Header {...this.props} />\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n\r\n","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\DialogsContainer.jsx",["183","184"],"import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from './../../components/HOC/withAuhRedirect'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,//перериуйся если чтото изменилось\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));//диспатчим \r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n) (Dialogs);//HOC","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Footer\\footer.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Login\\Login.jsx",["185"],"import React from 'react';\r\nimport classes from './Login.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {Input} from '../Utils/FormsControls/FormsControls';\r\nimport {required} from '../Utils/Validators/Validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from './../../redux/auth-reducer'\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from './../Utils/FormsControls/FormsControls.module.css'\r\nimport {createField} from '../../components/Utils/FormsControls/FormsControls';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form className={classes.loginform} onSubmit={handleSubmit}>\r\n\r\n            {createField(\"Email\", \"email\", [required], Input, {}, classes.loginunput)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"}, classes.loginunput)}\r\n            <div className={classes.logincheck}>\r\n                {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"})}\r\n                <span className={classes.loginremember}>Remember me</span>\r\n            </div>\r\n            {error && <div className={style.formsummaryerror}>\r\n                <span>{error}</span>\r\n            </div>}\r\n            <div>\r\n                <button className={classes.btn}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login' //form name\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    } //onSubmit all localdata from Form\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={classes.login}>Login</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n\r\n/*\r\n<form className={classes.loginform} onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field className={classes.loginunput}\r\n          placeholder={'Email'} name={'email'}\r\n          validate={[required]}\r\n          component={Input} />\r\n      </div>\r\n      <div>\r\n        <Field className={classes.loginunput}\r\n          placeholder={'Password'}\r\n          validate={[required]}\r\n          name={'password'}\r\n          type={'password'}\r\n          component={Input} />\r\n      </div>\r\n      <div className={classes.logincheck}>\r\n        <Field type={'checkbox'}\r\n          className={classes.loginreemember}\r\n          name={'RememberMe'}\r\n          component={Input} />\r\n        <span className={classes.loginremember}>Remember me</span>\r\n      </div>\r\n      {props.error && <div className={style.formsummaryerror}>\r\n        <span>{props.error}</span>\r\n      </div>}\r\n      <div>\r\n        <button className={classes.btn}>Login</button>\r\n      </div>\r\n    </form>*/\r\n\r\n//первый логин возвращает колбэк и диспатчит в санккреатер","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Nav\\Nav.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Users\\UserContainer.jsx",["186","187","188"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toogleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from './../Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsers,  getPageSize, getTotalUsersCount,\r\n    getCurrentPage, getIsFetching, getFollowingInProgress,\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\nт\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>{this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            unfollow={this.props.unfollow}\r\n            follow={this.props.follow}\r\n            followingInProgress={this.props.followingInProgress}//дизейбл кнопки\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state), // для пагинации\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage :getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n//в объекте делаем ссылки на экшнкреэйтеры(мэпстейтетупропс)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage,\r\n        toogleFollowingProgress,\r\n        getUsers: requestUsers })\r\n)(UsersContainer);\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toogleIsFetching: (isFetching) => {\r\n            dispatch(toogleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileContainer.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Api\\api.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\HOC\\withAuhRedirect.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\Profile.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\Dialogs.jsx",["189"],"import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../Utils/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../Utils/Validators/Validators';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n    //debugger;\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} id={m.id} />);\r\n  \r\n\r\n    const addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    } //onSubmit all localdata from Form\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field\r\n                        className={s.textarea}\r\n                        component={Textarea}\r\n                        name={'newMessageBody'}\r\n                        validate={[required, maxLength100]}\r\n                        placeholder={'enter your message'} />\r\n                </div>\r\n                <div>\r\n                    <button className={s.btn}>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'dialogAddMessageForm' //form name\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Header\\Header.jsx",["190"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <a href='#'><img src='/img/logo.png' alt='logo' className={classes.logo}></img></a>\r\n      <div><h1>Social Network</h1></div>\r\n      <div className={classes.loginblock}>\r\n        {props.isAuth\r\n          ? <div>{props.login} <button className={classes.btn} onClick={props.logout}>Log out</button> </div>\r\n          : <NavLink to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\n","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Users\\Users.jsx",["191","192"],"import React from 'react';\r\nimport userPhoto from './../../assets/img/rick.jpg';\r\nimport s from './Users.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Paginator from \"../Utils/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({\r\n                 currentPage, totalUsersCount, pageSize, onPageChanged, users, followingInProgress,\r\n                 follow, unfollow, ...props\r\n             }) => {\r\n\r\n    return <div>\r\n\r\n        <div className={s.numberPage}>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalUsersCount={totalUsersCount} pageSize={pageSize}/>\r\n        </div>\r\n\r\n\r\n        {users.map(u => <User user={u}\r\n                              followingInProgress={followingInProgress}\r\n                              follow={follow}\r\n                              unfollow={unfollow}\r\n                              key={u.id}\r\n            />\r\n        )}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Preloader\\Preloader.jsx",["193"],"import React from 'react';\r\nimport preloader from './../../assets/img/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader}/>\r\n}\r\n\r\nexport default Preloader;","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\DialogItem\\DialogsItem.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["194","195"],"import React from 'react';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfieStatus/ProfileStatusWithHooks';\r\nimport userAvatar from './../../../assets/img/avatar.jpg';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div className={classes.block}>\r\n      <div  className={classes.avatar}>\r\n         <img className={classes.avatarImg}src={profile.photos.large} />\r\n      </div>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      <div>\r\n        <div className={classes.profileName}> {profile.fullName} </div>\r\n      </div>\r\n      <div className={classes.text}>\r\n        <div className={classes.information}><p className={classes.infotext}>Facebook: </p>{profile.contacts.facebook}</div>\r\n        <div className={classes.information}><p className={classes.infotext}>Vkontakte: </p> {profile.contacts.vk} </div>\r\n        <div className={classes.information}><p className={classes.infotext}>My job: </p> {profile.lookingForAJobDescription}</div>\r\n        <div className={classes.information}><p className={classes.infotext}>About me: </p> {profile.aboutMe} </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n/*<div className={classes.avatar}>\r\n        <img src={userPhoto} className={classes.avatarImg} />\r\n      </div>\r\n      <div  className={classes.avatar}>\r\n        <img className={classes.avatarImg} src={props.profile.photos.large} />\r\n      </div>*/","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\MyPost\\MyPostsContainer.jsx",["196"],"import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\MyPost\\MyPosts.jsx",["197"],"import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './Mypost.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../Utils/Validators/Validators'\r\nimport { Textarea } from './../../Utils/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER YO\");\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    const onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    } //onSubmit all localdata from Form\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field\r\n                        className={s.textarea}\r\n                        component={Textarea}\r\n                        name={'newPostText'}\r\n                        placeholder={'enter your message'}\r\n                        validate={[required, maxLength10]} />\r\n                </div>\r\n                <div>\r\n                    <button className={s.btn}>ADD POST</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'ProfileAddNewPostForm' //form name\r\n})(AddNewPostForm)\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileInfo\\ProfieStatus\\ProfileStatus.jsx",[],["198","199"],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\MyPost\\Post\\Post.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\Validators\\validators.js",["200"],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\Validators\\Validators.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\FormsControls\\FormsControls.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\app-reducer.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\redux\\users-selectors.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Profile\\ProfileInfo\\ProfieStatus\\ProfileStatusWithHooks.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\object-helper.js",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Utils\\Paginator\\Paginator.jsx",[],"D:\\JS_LESSONS\\React\\2\\react1\\src\\components\\Users\\User.jsx",["201","202"],"import React from 'react';\r\nimport userPhoto from './../../assets/img/rick.jpg';\r\nimport s from './Users.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Paginator from \"../Utils/Paginator/Paginator\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return <div>\r\n\r\n        <div className={s.userBlock}>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.btnPosition}>\r\n                    {user.followed\r\n                        ? <button className={s.btn} disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}>\r\n                            Unfollow</button>\r\n                        : <button className={s.btn} disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}>\r\n                            Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div className={s.infoBlock}>\r\n                <div className={s.nameAndStatus}>\r\n                    <div className={s.name}>\r\n                        <div> {user.name}:</div>\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        <div> \"{user.status}\"</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.location}>\r\n                    <div>\r\n                        <div> {\"user.location.city\"}</div>\r\n                    </div>\r\n                    <div className={s.country}>\r\n                        <div> {\"user.location.country\"} </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default User;\r\n\r\n// return <div >\r\n//     <div className={s.numberPage}>\r\n//         {pages.map(p => {\r\n//             return <span className={props.currentPage === p && s.selectedPage} onClick={(e) => {\r\n//                 props.onPageChanged(p)// e - event(обработчик события)\r\n//             }}> {p} </span>\r\n//         })}\r\n//     </div>\r\n//\r\n//\r\n//     {props.users.map(u => <div key={u.id}>\r\n//         <div className={s.userBlock}>\r\n//             <div>\r\n//                 <div>\r\n//                     <NavLink to={'/profile/' + u.id}>\r\n//                         <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto} />\r\n//                     </NavLink>\r\n//                 </div>\r\n//                 <div className={s.btnPosition}>\r\n//                     {u.followed\r\n//                         ? <button className={s.btn} disabled={props.followingInProgress\r\n//                             .some(id => id === u.id)}\r\n//                                   onClick={() => { props.unfollow(u.id) }}>\r\n//                             Unfollow</button>\r\n//                         : <button className={s.btn} disabled={props.followingInProgress.some(id => id === u.id)}\r\n//                                   onClick={() => { props.follow(u.id) }}>\r\n//                             Follow</button>}\r\n//                 </div>\r\n//             </div>\r\n//             <div className={s.infoBlock}>\r\n//                 <div className={s.nameAndStatus}>\r\n//                     <div className={s.name} >\r\n//                         <div> {u.name}: </div>\r\n//                     </div>\r\n//                     <div className={s.status}>\r\n//                         <div> \"{u.status}\" </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className={s.location}>\r\n//                     <div>\r\n//                         <div> {\"u.location.city\"}</div>\r\n//                     </div>\r\n//                     <div className={s.country}>\r\n//                         <div> {\"u.location.country\"} </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     </div>)}\r\n// </div>",{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":43,"column":67,"nodeType":"209","messageId":"210","endLine":43,"endColumn":69},{"ruleId":"207","severity":1,"message":"208","line":64,"column":65,"nodeType":"209","messageId":"210","endLine":64,"endColumn":67},{"ruleId":"207","severity":1,"message":"211","line":104,"column":34,"nodeType":"209","messageId":"210","endLine":104,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":17},{"ruleId":"212","severity":1,"message":"216","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":15},{"ruleId":"212","severity":1,"message":"217","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":17},{"ruleId":"212","severity":1,"message":"218","line":8,"column":10,"nodeType":"214","messageId":"215","endLine":8,"endColumn":17},{"ruleId":"212","severity":1,"message":"219","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"212","severity":1,"message":"220","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":18},{"ruleId":"212","severity":1,"message":"221","line":3,"column":20,"nodeType":"214","messageId":"215","endLine":3,"endColumn":25},{"ruleId":"212","severity":1,"message":"222","line":19,"column":14,"nodeType":"214","messageId":"215","endLine":19,"endColumn":25},{"ruleId":"212","severity":1,"message":"223","line":19,"column":27,"nodeType":"214","messageId":"215","endLine":19,"endColumn":35},{"ruleId":"212","severity":1,"message":"223","line":24,"column":14,"nodeType":"214","messageId":"215","endLine":24,"endColumn":22},{"ruleId":"212","severity":1,"message":"220","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":18},{"ruleId":"224","severity":1,"message":"225","line":9,"column":7,"nodeType":"226","endLine":9,"endColumn":19},{"ruleId":"212","severity":1,"message":"227","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":4,"column":9,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":5,"column":12,"nodeType":"226","endLine":5,"endColumn":34},{"ruleId":"212","severity":1,"message":"230","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":18},{"ruleId":"228","severity":1,"message":"229","line":16,"column":10,"nodeType":"226","endLine":16,"endColumn":73},{"ruleId":"212","severity":1,"message":"219","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"212","severity":1,"message":"231","line":13,"column":9,"nodeType":"214","messageId":"215","endLine":13,"endColumn":23},{"ruleId":"203","replacedBy":"232"},{"ruleId":"205","replacedBy":"233"},{"ruleId":"234","severity":2,"message":"235","line":3,"column":7,"nodeType":"214","messageId":"236","endLine":3,"endColumn":12},{"ruleId":"212","severity":1,"message":"237","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":15,"column":25,"nodeType":"226","endLine":15,"endColumn":119},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'classes' is defined but never used.","'Preloader' is defined but never used.","'authAPI' is defined but never used.","'React' is defined but never used.","'Redirect' is defined but never used.","'Field' is defined but never used.","'currentPage' is assigned a value but never used.","'pageSize' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'userPhoto' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'userAvatar' is defined but never used.","'newPostElement' is assigned a value but never used.",["238"],["239"],"no-undef","'value' is not defined.","undef","'Paginator' is defined but never used.","no-global-assign","no-unsafe-negation"]